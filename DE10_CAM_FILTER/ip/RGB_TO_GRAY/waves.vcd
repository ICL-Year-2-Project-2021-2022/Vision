$date
	Tue Jun 07 13:52:35 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RGB_TO_GRAY_TB $end
$var wire 1 ! source_valid $end
$var wire 1 " source_sop $end
$var wire 1 # source_eop $end
$var wire 8 $ source_data [7:0] $end
$var wire 1 % sink_ready $end
$var reg 1 & clk $end
$var reg 1 ' reset $end
$var reg 24 ( sink_data [23:0] $end
$var reg 1 ) sink_eop $end
$var reg 1 * sink_sop $end
$var reg 1 + sink_valid $end
$var reg 1 , source_ready $end
$scope module dut $end
$var wire 1 & clk $end
$var wire 1 ' reset_n $end
$var wire 24 - sink_data [23:0] $end
$var wire 1 ) sink_eop $end
$var wire 1 * sink_sop $end
$var wire 1 + sink_valid $end
$var wire 1 , source_ready $end
$var wire 1 . valid $end
$var wire 1 ! source_valid $end
$var wire 1 " source_sop $end
$var wire 1 # source_eop $end
$var wire 8 / source_data [7:0] $end
$var wire 1 0 sop $end
$var wire 1 % sink_ready $end
$var wire 24 1 rgb [23:0] $end
$var wire 1 2 ready $end
$var wire 1 3 eop $end
$var reg 8 4 dout [7:0] $end
$var reg 1 5 selected_gray $end
$var reg 1 6 video_packet $end
$scope module in_reg $end
$var wire 1 & clk $end
$var wire 26 7 data_in [25:0] $end
$var wire 1 % ready_out $end
$var wire 1 ' rst_n $end
$var wire 1 + valid_in $end
$var wire 1 . valid_out $end
$var wire 1 2 ready_in $end
$var reg 26 8 data_out [25:0] $end
$var reg 1 9 data_valid $end
$var reg 1 : ready_in_d $end
$upscope $end
$scope module out_reg $end
$var wire 1 & clk $end
$var wire 10 ; data_in [9:0] $end
$var wire 1 , ready_in $end
$var wire 1 2 ready_out $end
$var wire 1 ' rst_n $end
$var wire 1 . valid_in $end
$var wire 1 ! valid_out $end
$var reg 10 < data_out [9:0] $end
$var reg 1 = data_valid $end
$var reg 1 > ready_in_d $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x>
x=
bx <
bx ;
x:
x9
bx 8
bx 7
x6
x5
bx 4
x3
x2
bx 1
x0
bx /
x.
bx -
x,
x+
x*
x)
bx (
0'
0&
x%
bx $
x#
x"
x!
$end
#1
1%
12
b0 4
0.
03
b0 ;
00
b0 1
0!
0#
0"
b0 $
b0 /
05
0:
09
b0 8
0>
0=
b0 <
06
1&
#2
0&
1,
0)
0*
0+
b0 7
b0 (
b0 -
1'
#3
1>
1:
1&
#4
0&
b10 7
1*
1+
#5
1.
b10 ;
10
19
b10 8
1&
#6
0&
0*
b1000000100000001100 7
b10000001000000011 (
b10000001000000011 -
#7
b1 4
15
1!
1"
b100 ;
00
b10000001000000011 1
16
1=
b10 <
b1000000100000001100 8
1&
#8
0&
1)
b10000001000000011000001 7
b100000010000000110000 (
b100000010000000110000 -
#9
b100100 4
b10010001 ;
13
b100000010000000110000 1
0"
b1 $
b1 /
b10000001000000011000001 8
b100 <
1&
#10
0%
02
0&
0,
0)
0+
b0 7
b0 (
b0 -
#11
1%
b11000001 ;
b110000 4
05
1#
b100100 $
b100100 /
0!
0.
06
b10010001 <
0>
09
0:
1&
#12
0&
#13
1&
#14
0&
#15
1&
#16
12
0&
1,
1*
1+
b110 7
b1 (
b1 -
#17
b1 4
03
b110 ;
10
b1 1
1.
1!
19
b110 8
1:
1>
1&
#18
0&
0*
b10000001000000011000000 7
b100000010000000110000 (
b100000010000000110000 -
#19
b110000 4
0#
1"
b1 $
b1 /
b11000000 ;
00
b100000010000000110000 1
b110 <
b10000001000000011000000 8
1&
#20
0&
b10000001000000011000001 7
1)
#21
b11000001 ;
13
0"
b110000 $
b110000 /
b10000001000000011000001 8
b11000000 <
1&
#22
0&
b10000001000000011000000 7
0)
#23
1#
b11000000 ;
03
b11000001 <
b10000001000000011000000 8
1&
#24
0&
#25
0#
b11000000 <
1&
#26
0&
#27
1&
#28
0&
#29
1&
#30
0&
#31
1&
#32
0&
#33
1&
#34
0&
#35
1&
#36
0&
#37
1&
#38
0&
#39
1&
#40
0&
#41
1&
#42
0&
#43
1&
#44
0&
#45
1&
#46
0&
#47
1&
#48
0&
#49
1&
#50
0&
#51
1&
#52
0&
#53
1&
#54
0&
#55
1&
#56
0&
#57
1&
#58
0&
#59
1&
#60
0&
#61
1&
#62
0&
#63
1&
#64
0&
#65
1&
#66
0&
#67
1&
#68
0&
#69
1&
#70
0&
#71
1&
#72
0&
#73
1&
#74
0&
#75
1&
#76
0&
#77
1&
#78
0&
#79
1&
#80
0&
#81
1&
#82
0&
#83
1&
#84
0&
#85
1&
#86
0&
#87
1&
#88
0&
#89
1&
#90
0&
#91
1&
#92
0&
#93
1&
#94
0&
#95
1&
#96
0&
#97
1&
#98
0&
#99
1&
#100
0&
