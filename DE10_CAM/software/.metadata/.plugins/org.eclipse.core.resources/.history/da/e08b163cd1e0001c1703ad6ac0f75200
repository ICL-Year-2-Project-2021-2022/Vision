#include "system.h"
#include "altera_avalon_i2c.h"
#include "altera_avalon_i2c_regs.h"
#include "altera_avalon_pio_regs.h"
#include "sys/alt_stdio.h"
#include "sys/alt_irq.h"

#include <stdlib.h>
#include <string.h>

#include <stdio.h>


int main()
{
	ALT_AVALON_I2C_DEV_t *i2c_dev; //pointer to instance structure
    alt_u8 txbuffer[0x20];
	alt_u8 rxbuffer[0x20];
	int i;
	ALT_AVALON_I2C_STATUS_CODE status;

	//get a pointer to the avalon i2c instance
	i2c_dev = alt_avalon_i2c_open("/dev/i2c_0");
	if (NULL==i2c_dev) {
		printf("Error: Cannot find /dev/i2c_0\n");
		return 1;
	} else {
		printf("I2C driver found: /dev/i2c_0\n");
    }

 	//set the address of the device using
	alt_avalon_i2c_master_target_set(i2c_dev,0x51);
	//write data to an eeprom at address 0x020

	txbuffer[0] = 2;
	txbuffer[1] = 0;

	while(1) {
		for (i=0;i<0x10;i++) txbuffer[i+2]=i; //some data to write
		status = alt_avalon_i2c_master_tx(i2c_dev,txbuffer, 0x10+2, ALT_AVALON_I2C_NO_INTERRUPTS);
		printf("Status TX: %d", status);
	}
}
