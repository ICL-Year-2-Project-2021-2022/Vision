#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1110-g18392a46)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2009.vpi";
S_0000019495a8d270 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0000019495a8d400 .scope module, "EDGE_BINS_TB" "EDGE_BINS_TB" 3 1;
 .timescale 0 0;
L_0000019495bf0088 .functor BUFT 1, C4<00000000000000000000000000000001>, C4<0>, C4<0>, C4<0>;
v0000019495afa650_0 .net/2s *"_ivl_0", 31 0, L_0000019495bf0088;  1 drivers
L_0000019495bf00d0 .functor BUFT 1, C4<00000000000000000000000000000001>, C4<0>, C4<0>, C4<0>;
v0000019495af94d0_0 .net/2s *"_ivl_4", 31 0, L_0000019495bf00d0;  1 drivers
L_0000019495bf0118 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0000019495af9a70_0 .net/2s *"_ivl_8", 31 0, L_0000019495bf0118;  1 drivers
v0000019495afa290_0 .var "address", 31 0;
v0000019495afa150_0 .var "clk", 0 0;
v0000019495af9b10_0 .net "data", 31 0, v0000019495af6230_0;  1 drivers
v0000019495af97f0_0 .var "reset", 0 0;
v0000019495af9750_0 .var "sink_data", 23 0;
v0000019495af9d90_0 .var "sink_eop", 0 0;
v0000019495af9250_0 .net "sink_ready", 0 0, L_0000019495a6c740;  1 drivers
v0000019495af8b70_0 .var "sink_sop", 0 0;
v0000019495af9070_0 .var "sink_valid", 0 0;
v0000019495af8e90_0 .net "source_data", 23 0, L_0000019495af92f0;  1 drivers
v0000019495af8c10_0 .net "source_eop", 0 0, L_0000019495af8df0;  1 drivers
v0000019495af9e30_0 .var "source_ready", 0 0;
v0000019495af9610_0 .net "source_sop", 0 0, L_0000019495af9cf0;  1 drivers
v0000019495af9890_0 .net "source_valid", 0 0, L_0000019495a6c4a0;  1 drivers
L_0000019495af8ad0 .part L_0000019495bf0088, 0, 1;
L_0000019495af9570 .part L_0000019495bf00d0, 0, 1;
L_0000019495af96b0 .part L_0000019495bf0118, 0, 1;
L_0000019495af8990 .part v0000019495afa290_0, 0, 5;
S_0000019495a8d590 .scope begin, "$ivl_for_loop3" "$ivl_for_loop3" 3 46, 3 46 0, S_0000019495a8d400;
 .timescale 0 0;
v0000019495a72b90_0 .var/2s "i", 31 0;
S_0000019495a424d0 .scope begin, "$ivl_for_loop4" "$ivl_for_loop4" 3 68, 3 68 0, S_0000019495a8d400;
 .timescale 0 0;
v0000019495a72e10_0 .var/2s "i", 31 0;
S_0000019495a42660 .scope module, "dut" "EDGE_BINS" 3 79, 4 1 0, S_0000019495a8d400;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "reset_n";
    .port_info 2 /INPUT 1 "s_chipselect";
    .port_info 3 /INPUT 1 "s_read";
    .port_info 4 /INPUT 1 "s_write";
    .port_info 5 /OUTPUT 32 "s_readdata";
    .port_info 6 /INPUT 32 "s_writedata";
    .port_info 7 /INPUT 5 "s_address";
    .port_info 8 /INPUT 24 "sink_data";
    .port_info 9 /INPUT 1 "sink_valid";
    .port_info 10 /OUTPUT 1 "sink_ready";
    .port_info 11 /INPUT 1 "sink_sop";
    .port_info 12 /INPUT 1 "sink_eop";
    .port_info 13 /OUTPUT 24 "source_data";
    .port_info 14 /OUTPUT 1 "source_valid";
    .port_info 15 /INPUT 1 "source_ready";
    .port_info 16 /OUTPUT 1 "source_sop";
    .port_info 17 /OUTPUT 1 "source_eop";
P_0000019495a7af30 .param/l "IMAGE_H" 0 4 31, C4<00111100000>;
P_0000019495a7af68 .param/l "IMAGE_W" 0 4 30, C4<01010000000>;
v0000019495af6870_0 .var "bindebug", 15 0;
v0000019495af6b90_0 .var "bindebug2", 15 0;
v0000019495af7450_0 .net "blue", 7 0, L_0000019495af91b0;  1 drivers
v0000019495af76d0_0 .var "blue_out", 7 0;
v0000019495af6e10_0 .net "clk", 0 0, v0000019495afa150_0;  1 drivers
v0000019495af74f0_0 .net "eop", 0 0, L_0000019495afa6f0;  1 drivers
v0000019495af7bd0 .array "freq_bin", 0 19, 15 0;
v0000019495af7e50 .array "freq_bin_out", 0 19, 15 0;
v0000019495af7ef0_0 .net "green", 7 0, L_0000019495af9bb0;  1 drivers
v0000019495af7590_0 .var "green_out", 7 0;
v0000019495af7630_0 .net "in_valid", 0 0, L_0000019495a6ca50;  1 drivers
v0000019495af6730_0 .net "out_ready", 0 0, L_0000019495a6c970;  1 drivers
v0000019495af65f0_0 .var "packet_video", 0 0;
v0000019495af7770_0 .net "red", 7 0, L_0000019495af9110;  1 drivers
v0000019495af7f90_0 .var "red_out", 7 0;
v0000019495af6c30_0 .net "reset_n", 0 0, v0000019495af97f0_0;  1 drivers
v0000019495af8030_0 .net "s_address", 4 0, L_0000019495af8990;  1 drivers
v0000019495af80d0_0 .net "s_chipselect", 0 0, L_0000019495af8ad0;  1 drivers
v0000019495af6370_0 .net "s_read", 0 0, L_0000019495af9570;  1 drivers
v0000019495af6230_0 .var "s_readdata", 31 0;
v0000019495af6eb0_0 .net "s_write", 0 0, L_0000019495af96b0;  1 drivers
o0000019495aa4d18 .functor BUFZ 32, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>; HiZ drive
v0000019495af64b0_0 .net "s_writedata", 31 0, o0000019495aa4d18;  0 drivers
v0000019495af6550_0 .net "sink_data", 23 0, v0000019495af9750_0;  1 drivers
v0000019495af6690_0 .net "sink_eop", 0 0, v0000019495af9d90_0;  1 drivers
v0000019495af67d0_0 .net "sink_ready", 0 0, L_0000019495a6c740;  alias, 1 drivers
v0000019495af6910_0 .net "sink_sop", 0 0, v0000019495af8b70_0;  1 drivers
v0000019495af6cd0_0 .net "sink_valid", 0 0, v0000019495af9070_0;  1 drivers
v0000019495af6d70_0 .net "sop", 0 0, L_0000019495af8d50;  1 drivers
v0000019495af6f50_0 .net "source_data", 23 0, L_0000019495af92f0;  alias, 1 drivers
v0000019495af6ff0_0 .net "source_eop", 0 0, L_0000019495af8df0;  alias, 1 drivers
v0000019495af8f30_0 .net "source_ready", 0 0, v0000019495af9e30_0;  1 drivers
v0000019495af8fd0_0 .net "source_sop", 0 0, L_0000019495af9cf0;  alias, 1 drivers
v0000019495af8a30_0 .net "source_valid", 0 0, L_0000019495a6c4a0;  alias, 1 drivers
v0000019495afa5b0_0 .var "x", 10 0;
v0000019495af9930_0 .var "y", 10 0;
v0000019495af7bd0_0 .array/port v0000019495af7bd0, 0;
E_0000019495a9e140/0 .event anyedge, v0000019495af7770_0, v0000019495af7ef0_0, v0000019495af7450_0, v0000019495af7bd0_0;
v0000019495af7bd0_1 .array/port v0000019495af7bd0, 1;
v0000019495af7bd0_2 .array/port v0000019495af7bd0, 2;
v0000019495af7bd0_3 .array/port v0000019495af7bd0, 3;
v0000019495af7bd0_4 .array/port v0000019495af7bd0, 4;
E_0000019495a9e140/1 .event anyedge, v0000019495af7bd0_1, v0000019495af7bd0_2, v0000019495af7bd0_3, v0000019495af7bd0_4;
v0000019495af7bd0_5 .array/port v0000019495af7bd0, 5;
v0000019495af7bd0_6 .array/port v0000019495af7bd0, 6;
v0000019495af7bd0_7 .array/port v0000019495af7bd0, 7;
v0000019495af7bd0_8 .array/port v0000019495af7bd0, 8;
E_0000019495a9e140/2 .event anyedge, v0000019495af7bd0_5, v0000019495af7bd0_6, v0000019495af7bd0_7, v0000019495af7bd0_8;
v0000019495af7bd0_9 .array/port v0000019495af7bd0, 9;
v0000019495af7bd0_10 .array/port v0000019495af7bd0, 10;
v0000019495af7bd0_11 .array/port v0000019495af7bd0, 11;
v0000019495af7bd0_12 .array/port v0000019495af7bd0, 12;
E_0000019495a9e140/3 .event anyedge, v0000019495af7bd0_9, v0000019495af7bd0_10, v0000019495af7bd0_11, v0000019495af7bd0_12;
v0000019495af7bd0_13 .array/port v0000019495af7bd0, 13;
v0000019495af7bd0_14 .array/port v0000019495af7bd0, 14;
v0000019495af7bd0_15 .array/port v0000019495af7bd0, 15;
v0000019495af7bd0_16 .array/port v0000019495af7bd0, 16;
E_0000019495a9e140/4 .event anyedge, v0000019495af7bd0_13, v0000019495af7bd0_14, v0000019495af7bd0_15, v0000019495af7bd0_16;
v0000019495af7bd0_17 .array/port v0000019495af7bd0, 17;
v0000019495af7bd0_18 .array/port v0000019495af7bd0, 18;
v0000019495af7bd0_19 .array/port v0000019495af7bd0, 19;
v0000019495af7e50_0 .array/port v0000019495af7e50, 0;
E_0000019495a9e140/5 .event anyedge, v0000019495af7bd0_17, v0000019495af7bd0_18, v0000019495af7bd0_19, v0000019495af7e50_0;
v0000019495af7e50_1 .array/port v0000019495af7e50, 1;
v0000019495af7e50_2 .array/port v0000019495af7e50, 2;
v0000019495af7e50_3 .array/port v0000019495af7e50, 3;
v0000019495af7e50_4 .array/port v0000019495af7e50, 4;
E_0000019495a9e140/6 .event anyedge, v0000019495af7e50_1, v0000019495af7e50_2, v0000019495af7e50_3, v0000019495af7e50_4;
v0000019495af7e50_5 .array/port v0000019495af7e50, 5;
v0000019495af7e50_6 .array/port v0000019495af7e50, 6;
v0000019495af7e50_7 .array/port v0000019495af7e50, 7;
v0000019495af7e50_8 .array/port v0000019495af7e50, 8;
E_0000019495a9e140/7 .event anyedge, v0000019495af7e50_5, v0000019495af7e50_6, v0000019495af7e50_7, v0000019495af7e50_8;
v0000019495af7e50_9 .array/port v0000019495af7e50, 9;
v0000019495af7e50_10 .array/port v0000019495af7e50, 10;
v0000019495af7e50_11 .array/port v0000019495af7e50, 11;
v0000019495af7e50_12 .array/port v0000019495af7e50, 12;
E_0000019495a9e140/8 .event anyedge, v0000019495af7e50_9, v0000019495af7e50_10, v0000019495af7e50_11, v0000019495af7e50_12;
v0000019495af7e50_13 .array/port v0000019495af7e50, 13;
v0000019495af7e50_14 .array/port v0000019495af7e50, 14;
v0000019495af7e50_15 .array/port v0000019495af7e50, 15;
v0000019495af7e50_16 .array/port v0000019495af7e50, 16;
E_0000019495a9e140/9 .event anyedge, v0000019495af7e50_13, v0000019495af7e50_14, v0000019495af7e50_15, v0000019495af7e50_16;
v0000019495af7e50_17 .array/port v0000019495af7e50, 17;
v0000019495af7e50_18 .array/port v0000019495af7e50, 18;
v0000019495af7e50_19 .array/port v0000019495af7e50, 19;
E_0000019495a9e140/10 .event anyedge, v0000019495af7e50_17, v0000019495af7e50_18, v0000019495af7e50_19;
E_0000019495a9e140 .event/or E_0000019495a9e140/0, E_0000019495a9e140/1, E_0000019495a9e140/2, E_0000019495a9e140/3, E_0000019495a9e140/4, E_0000019495a9e140/5, E_0000019495a9e140/6, E_0000019495a9e140/7, E_0000019495a9e140/8, E_0000019495a9e140/9, E_0000019495a9e140/10;
L_0000019495af9110 .part v0000019495a72af0_0, 18, 8;
L_0000019495af9bb0 .part v0000019495a72af0_0, 10, 8;
L_0000019495af91b0 .part v0000019495a72af0_0, 2, 8;
L_0000019495af8d50 .part v0000019495a72af0_0, 1, 1;
L_0000019495afa6f0 .part v0000019495a72af0_0, 0, 1;
L_0000019495afa790 .concat [ 1 1 24 0], v0000019495af9d90_0, v0000019495af8b70_0, v0000019495af9750_0;
L_0000019495af92f0 .part v0000019495af73b0_0, 2, 24;
L_0000019495af9cf0 .part v0000019495af73b0_0, 1, 1;
L_0000019495af8df0 .part v0000019495af73b0_0, 0, 1;
LS_0000019495af9430_0_0 .concat [ 1 1 8 8], L_0000019495afa6f0, L_0000019495af8d50, v0000019495af76d0_0, v0000019495af7590_0;
LS_0000019495af9430_0_4 .concat [ 8 0 0 0], v0000019495af7f90_0;
L_0000019495af9430 .concat [ 18 8 0 0], LS_0000019495af9430_0_0, LS_0000019495af9430_0_4;
S_0000019495af5ba0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 61, 4 61 0, S_0000019495a42660;
 .timescale 0 0;
v0000019495a73090_0 .var/2s "i", 31 0;
S_0000019495af5d30 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 4 82, 4 82 0, S_0000019495a42660;
 .timescale 0 0;
v0000019495a73270_0 .var/2s "i", 31 0;
S_0000019495af5ec0 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 4 92, 4 92 0, S_0000019495a42660;
 .timescale 0 0;
v0000019495a73130_0 .var/2s "i", 31 0;
S_0000019495af6050 .scope module, "in_reg" "STREAM_REG_BIN" 4 105, 5 1 0, S_0000019495a42660;
 .timescale 0 0;
    .port_info 0 /OUTPUT 1 "ready_out";
    .port_info 1 /OUTPUT 1 "valid_out";
    .port_info 2 /OUTPUT 26 "data_out";
    .port_info 3 /INPUT 1 "ready_in";
    .port_info 4 /INPUT 1 "valid_in";
    .port_info 5 /INPUT 26 "data_in";
    .port_info 6 /INPUT 1 "clk";
    .port_info 7 /INPUT 1 "rst_n";
P_0000019495a9e1c0 .param/l "DATA_WIDTH" 0 5 13, +C4<00000000000000000000000000011010>;
L_0000019495a6cdd0 .functor NOT 1, v0000019495af79f0_0, C4<0>, C4<0>, C4<0>;
L_0000019495a6c190 .functor NOT 1, v0000019495af9070_0, C4<0>, C4<0>, C4<0>;
L_0000019495a6c040 .functor AND 1, L_0000019495a6cdd0, L_0000019495a6c190, C4<1>, C4<1>;
L_0000019495a6c740 .functor OR 1, L_0000019495a6c040, L_0000019495a6c970, C4<0>, C4<0>;
L_0000019495a6ca50 .functor AND 1, v0000019495af7db0_0, v0000019495af79f0_0, C4<1>, C4<1>;
v0000019495a729b0_0 .net *"_ivl_0", 0 0, L_0000019495a6cdd0;  1 drivers
v0000019495a72870_0 .net *"_ivl_2", 0 0, L_0000019495a6c190;  1 drivers
v0000019495a731d0_0 .net *"_ivl_4", 0 0, L_0000019495a6c040;  1 drivers
v0000019495a72910_0 .net "clk", 0 0, v0000019495afa150_0;  alias, 1 drivers
v0000019495a72a50_0 .net "data_in", 25 0, L_0000019495afa790;  1 drivers
v0000019495a72af0_0 .var "data_out", 25 0;
v0000019495af79f0_0 .var "data_valid", 0 0;
v0000019495af7090_0 .net "ready_in", 0 0, L_0000019495a6c970;  alias, 1 drivers
v0000019495af7db0_0 .var "ready_in_d", 0 0;
v0000019495af62d0_0 .net "ready_out", 0 0, L_0000019495a6c740;  alias, 1 drivers
v0000019495af6a50_0 .net "rst_n", 0 0, v0000019495af97f0_0;  alias, 1 drivers
v0000019495af7810_0 .net "valid_in", 0 0, v0000019495af9070_0;  alias, 1 drivers
v0000019495af7310_0 .net "valid_out", 0 0, L_0000019495a6ca50;  alias, 1 drivers
E_0000019495a9db00 .event posedge, v0000019495a72910_0;
S_0000019495af81f0 .scope module, "out_reg" "STREAM_REG_BIN" 4 116, 5 1 0, S_0000019495a42660;
 .timescale 0 0;
    .port_info 0 /OUTPUT 1 "ready_out";
    .port_info 1 /OUTPUT 1 "valid_out";
    .port_info 2 /OUTPUT 26 "data_out";
    .port_info 3 /INPUT 1 "ready_in";
    .port_info 4 /INPUT 1 "valid_in";
    .port_info 5 /INPUT 26 "data_in";
    .port_info 6 /INPUT 1 "clk";
    .port_info 7 /INPUT 1 "rst_n";
P_0000019495a9db40 .param/l "DATA_WIDTH" 0 5 13, +C4<00000000000000000000000000011010>;
L_0000019495a6c3c0 .functor NOT 1, v0000019495af78b0_0, C4<0>, C4<0>, C4<0>;
L_0000019495a6bf60 .functor NOT 1, L_0000019495a6ca50, C4<0>, C4<0>, C4<0>;
L_0000019495a6c0b0 .functor AND 1, L_0000019495a6c3c0, L_0000019495a6bf60, C4<1>, C4<1>;
L_0000019495a6c970 .functor OR 1, L_0000019495a6c0b0, v0000019495af9e30_0, C4<0>, C4<0>;
L_0000019495a6c4a0 .functor AND 1, v0000019495af69b0_0, v0000019495af78b0_0, C4<1>, C4<1>;
v0000019495af7a90_0 .net *"_ivl_0", 0 0, L_0000019495a6c3c0;  1 drivers
v0000019495af6410_0 .net *"_ivl_2", 0 0, L_0000019495a6bf60;  1 drivers
v0000019495af7c70_0 .net *"_ivl_4", 0 0, L_0000019495a6c0b0;  1 drivers
v0000019495af7b30_0 .net "clk", 0 0, v0000019495afa150_0;  alias, 1 drivers
v0000019495af7130_0 .net "data_in", 25 0, L_0000019495af9430;  1 drivers
v0000019495af73b0_0 .var "data_out", 25 0;
v0000019495af78b0_0 .var "data_valid", 0 0;
v0000019495af71d0_0 .net "ready_in", 0 0, v0000019495af9e30_0;  alias, 1 drivers
v0000019495af69b0_0 .var "ready_in_d", 0 0;
v0000019495af6af0_0 .net "ready_out", 0 0, L_0000019495a6c970;  alias, 1 drivers
v0000019495af7d10_0 .net "rst_n", 0 0, v0000019495af97f0_0;  alias, 1 drivers
v0000019495af7950_0 .net "valid_in", 0 0, L_0000019495a6ca50;  alias, 1 drivers
v0000019495af7270_0 .net "valid_out", 0 0, L_0000019495a6c4a0;  alias, 1 drivers
    .scope S_0000019495af6050;
T_0 ;
    %wait E_0000019495a9db00;
    %load/vec4 v0000019495af6a50_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.0, 8;
    %pushi/vec4 0, 0, 26;
    %assign/vec4 v0000019495a72af0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000019495af79f0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000019495af7db0_0, 0;
    %jmp T_0.1;
T_0.0 ;
    %load/vec4 v0000019495af7090_0;
    %assign/vec4 v0000019495af7db0_0, 0;
    %load/vec4 v0000019495af7810_0;
    %load/vec4 v0000019495af79f0_0;
    %inv;
    %load/vec4 v0000019495af7db0_0;
    %or;
    %and;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.2, 8;
    %load/vec4 v0000019495a72a50_0;
    %assign/vec4 v0000019495a72af0_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000019495af79f0_0, 0;
    %jmp T_0.3;
T_0.2 ;
    %load/vec4 v0000019495af7db0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.4, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000019495af79f0_0, 0;
T_0.4 ;
T_0.3 ;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0000019495af81f0;
T_1 ;
    %wait E_0000019495a9db00;
    %load/vec4 v0000019495af7d10_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    %pushi/vec4 0, 0, 26;
    %assign/vec4 v0000019495af73b0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000019495af78b0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000019495af69b0_0, 0;
    %jmp T_1.1;
T_1.0 ;
    %load/vec4 v0000019495af71d0_0;
    %assign/vec4 v0000019495af69b0_0, 0;
    %load/vec4 v0000019495af7950_0;
    %load/vec4 v0000019495af78b0_0;
    %inv;
    %load/vec4 v0000019495af69b0_0;
    %or;
    %and;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.2, 8;
    %load/vec4 v0000019495af7130_0;
    %assign/vec4 v0000019495af73b0_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000019495af78b0_0, 0;
    %jmp T_1.3;
T_1.2 ;
    %load/vec4 v0000019495af69b0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.4, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000019495af78b0_0, 0;
T_1.4 ;
T_1.3 ;
T_1.1 ;
    %jmp T_1;
    .thread T_1;
    .scope S_0000019495a42660;
T_2 ;
    %wait E_0000019495a9e140;
    %load/vec4 v0000019495af7770_0;
    %load/vec4 v0000019495af7ef0_0;
    %concat/vec4; draw_concat_vec4
    %load/vec4 v0000019495af7450_0;
    %concat/vec4; draw_concat_vec4
    %split/vec4 8;
    %store/vec4 v0000019495af76d0_0, 0, 8;
    %split/vec4 8;
    %store/vec4 v0000019495af7590_0, 0, 8;
    %store/vec4 v0000019495af7f90_0, 0, 8;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0000019495af7bd0, 4;
    %store/vec4 v0000019495af6870_0, 0, 16;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0000019495af7e50, 4;
    %store/vec4 v0000019495af6b90_0, 0, 16;
    %jmp T_2;
    .thread T_2, $push;
    .scope S_0000019495a42660;
T_3 ;
    %wait E_0000019495a9db00;
    %load/vec4 v0000019495af6d70_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.0, 8;
    %pushi/vec4 0, 0, 11;
    %assign/vec4 v0000019495afa5b0_0, 0;
    %pushi/vec4 0, 0, 11;
    %assign/vec4 v0000019495af9930_0, 0;
    %load/vec4 v0000019495af7450_0;
    %parti/s 4, 0, 2;
    %pushi/vec4 0, 0, 4;
    %cmp/e;
    %flag_get/vec4 4;
    %assign/vec4 v0000019495af65f0_0, 0;
    %fork t_1, S_0000019495af5ba0;
    %jmp t_0;
    .scope S_0000019495af5ba0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000019495a73090_0, 0, 32;
T_3.2 ;
    %load/vec4 v0000019495a73090_0;
    %cmpi/s 20, 0, 32;
    %jmp/0xz T_3.3, 5;
    %pushi/vec4 0, 0, 16;
    %ix/getv/s 3, v0000019495a73090_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0000019495af7bd0, 0, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000019495a73090_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000019495a73090_0, 0, 32;
    %jmp T_3.2;
T_3.3 ;
    %end;
    .scope S_0000019495a42660;
t_0 %join;
    %jmp T_3.1;
T_3.0 ;
    %load/vec4 v0000019495af7630_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.4, 8;
    %load/vec4 v0000019495afa5b0_0;
    %pad/u 32;
    %cmpi/e 639, 0, 32;
    %jmp/0xz  T_3.6, 4;
    %pushi/vec4 0, 0, 11;
    %assign/vec4 v0000019495afa5b0_0, 0;
    %load/vec4 v0000019495af9930_0;
    %addi 1, 0, 11;
    %assign/vec4 v0000019495af9930_0, 0;
    %jmp T_3.7;
T_3.6 ;
    %load/vec4 v0000019495afa5b0_0;
    %addi 1, 0, 11;
    %assign/vec4 v0000019495afa5b0_0, 0;
T_3.7 ;
    %load/vec4 v0000019495af7450_0;
    %pad/u 32;
    %cmpi/u 128, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz  T_3.8, 5;
    %load/vec4 v0000019495afa5b0_0;
    %parti/s 6, 5, 4;
    %ix/vec4 4;
    %load/vec4a v0000019495af7bd0, 4;
    %addi 1, 0, 16;
    %load/vec4 v0000019495afa5b0_0;
    %parti/s 6, 5, 4;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0000019495af7bd0, 0, 4;
T_3.8 ;
T_3.4 ;
T_3.1 ;
    %load/vec4 v0000019495af74f0_0;
    %load/vec4 v0000019495af7630_0;
    %and;
    %load/vec4 v0000019495af65f0_0;
    %and;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.10, 8;
    %fork t_3, S_0000019495af5d30;
    %jmp t_2;
    .scope S_0000019495af5d30;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000019495a73270_0, 0, 32;
T_3.12 ;
    %load/vec4 v0000019495a73270_0;
    %cmpi/s 20, 0, 32;
    %jmp/0xz T_3.13, 5;
    %ix/getv/s 4, v0000019495a73270_0;
    %load/vec4a v0000019495af7bd0, 4;
    %ix/getv/s 3, v0000019495a73270_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0000019495af7e50, 0, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000019495a73270_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000019495a73270_0, 0, 32;
    %jmp T_3.12;
T_3.13 ;
    %end;
    .scope S_0000019495a42660;
t_2 %join;
T_3.10 ;
    %load/vec4 v0000019495af6c30_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.14, 8;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v0000019495af6230_0, 0;
    %fork t_5, S_0000019495af5ec0;
    %jmp t_4;
    .scope S_0000019495af5ec0;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000019495a73130_0, 0, 32;
T_3.16 ;
    %load/vec4 v0000019495a73130_0;
    %cmpi/s 20, 0, 32;
    %jmp/0xz T_3.17, 5;
    %pushi/vec4 0, 0, 16;
    %ix/getv/s 3, v0000019495a73130_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0000019495af7bd0, 0, 4;
    %pushi/vec4 0, 0, 16;
    %ix/getv/s 3, v0000019495a73130_0;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0000019495af7e50, 0, 4;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000019495a73130_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000019495a73130_0, 0, 32;
    %jmp T_3.16;
T_3.17 ;
    %end;
    .scope S_0000019495a42660;
t_4 %join;
    %jmp T_3.15;
T_3.14 ;
    %load/vec4 v0000019495af80d0_0;
    %load/vec4 v0000019495af6370_0;
    %and;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.18, 8;
    %load/vec4 v0000019495af8030_0;
    %pad/u 6;
    %ix/vec4 4;
    %load/vec4a v0000019495af7e50, 4;
    %pad/u 32;
    %assign/vec4 v0000019495af6230_0, 0;
T_3.18 ;
T_3.15 ;
    %jmp T_3;
    .thread T_3;
    .scope S_0000019495a8d400;
T_4 ;
    %vpi_call/w 3 10 "$dumpfile", "waves.vcd" {0 0 0};
    %vpi_call/w 3 11 "$dumpvars", 32'sb00000000000000000000000000000000, S_0000019495a8d400 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000019495afa150_0, 0, 1;
    %pushi/vec4 614490, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %delay 1, 0;
    %load/vec4 v0000019495afa150_0;
    %inv;
    %store/vec4 v0000019495afa150_0, 0, 1;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
    %end;
    .thread T_4;
    .scope S_0000019495a8d400;
T_5 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000019495af97f0_0, 0, 1;
    %delay 2, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000019495af97f0_0, 0, 1;
    %pushi/vec4 0, 0, 24;
    %store/vec4 v0000019495af9750_0, 0, 24;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000019495af9070_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000019495af8b70_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000019495af9d90_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000019495af9e30_0, 0, 1;
    %delay 2, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000019495af9070_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000019495af8b70_0, 0, 1;
    %pushi/vec4 0, 0, 24;
    %store/vec4 v0000019495af9750_0, 0, 24;
    %delay 2, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000019495af8b70_0, 0, 1;
    %fork t_7, S_0000019495a8d590;
    %jmp t_6;
    .scope S_0000019495a8d590;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000019495a72b90_0, 0, 32;
T_5.0 ;
    %load/vec4 v0000019495a72b90_0;
    %cmpi/s 307200, 0, 32;
    %jmp/0xz T_5.1, 5;
    %load/vec4 v0000019495a72b90_0;
    %pushi/vec4 640, 0, 32;
    %mod/s;
    %cmpi/e 31, 0, 32;
    %jmp/0xz  T_5.2, 4;
    %pushi/vec4 255, 0, 24;
    %store/vec4 v0000019495af9750_0, 0, 24;
    %jmp T_5.3;
T_5.2 ;
    %load/vec4 v0000019495a72b90_0;
    %pushi/vec4 640, 0, 32;
    %mod/s;
    %cmpi/e 32, 0, 32;
    %jmp/0xz  T_5.4, 4;
    %pushi/vec4 255, 0, 24;
    %store/vec4 v0000019495af9750_0, 0, 24;
    %jmp T_5.5;
T_5.4 ;
    %load/vec4 v0000019495a72b90_0;
    %pushi/vec4 640, 0, 32;
    %mod/s;
    %cmpi/e 630, 0, 32;
    %jmp/0xz  T_5.6, 4;
    %pushi/vec4 255, 0, 24;
    %store/vec4 v0000019495af9750_0, 0, 24;
    %jmp T_5.7;
T_5.6 ;
    %pushi/vec4 0, 0, 24;
    %store/vec4 v0000019495af9750_0, 0, 24;
T_5.7 ;
T_5.5 ;
T_5.3 ;
    %delay 2, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000019495a72b90_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000019495a72b90_0, 0, 32;
    %jmp T_5.0;
T_5.1 ;
    %end;
    .scope S_0000019495a8d400;
t_6 %join;
    %delay 2, 0;
    %pushi/vec4 0, 0, 24;
    %store/vec4 v0000019495af9750_0, 0, 24;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000019495af9070_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000019495af8b70_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000019495af9d90_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000019495af9e30_0, 0, 1;
    %delay 2, 0;
    %delay 2, 0;
    %fork t_9, S_0000019495a424d0;
    %jmp t_8;
    .scope S_0000019495a424d0;
t_9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000019495a72e10_0, 0, 32;
T_5.8 ;
    %load/vec4 v0000019495a72e10_0;
    %cmpi/s 20, 0, 32;
    %jmp/0xz T_5.9, 5;
    %load/vec4 v0000019495a72e10_0;
    %store/vec4 v0000019495afa290_0, 0, 32;
    %delay 2, 0;
    %vpi_call/w 3 71 "$display", "Reg %d: %x", v0000019495a72e10_0, v0000019495af9b10_0 {0 0 0};
    %delay 2, 0;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000019495a72e10_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000019495a72e10_0, 0, 32;
    %jmp T_5.8;
T_5.9 ;
    %end;
    .scope S_0000019495a8d400;
t_8 %join;
    %end;
    .thread T_5;
# The file index is used to find the file name in the following table.
:file_names 6;
    "N/A";
    "<interactive>";
    "-";
    "EDGE_BINS_TB.sv";
    "EDGE_BINS.sv";
    "STREAM_REG_BIN.v";
